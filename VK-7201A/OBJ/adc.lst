C51 COMPILER V9.59.0.0   ADC                                                               06/27/2023 19:17:31 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE ADC
OBJECT MODULE PLACED IN ..\OBJ\adc.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE ..\FWLib\src\adc.c OMF2 OPTIMIZE(8,SPEED) BROWSE INCDIR(..\CORE;..\FWLib
                    -\inc;..\SYSTEM;..\USER\app;..\TOUCHLib;..\USER\driver;..\USER\event;..\USER\mid) DEBUG PRINT(..\OBJ\adc.lst) TABS(2) OBJ
                    -ECT(..\OBJ\adc.obj)

line level    source

   1          /*******************************************************************************
   2          * Copyright (C) 2019 China Micro Semiconductor Limited Company. All Rights Reserved.
   3          *
   4          * This software is owned and published by:
   5          * CMS LLC, No 2609-10, Taurus Plaza, TaoyuanRoad, NanshanDistrict, Shenzhen, China.
   6          *
   7          * BY DOWNLOADING, INSTALLING OR USING THIS SOFTWARE, YOU AGREE TO BE BOUND
   8          * BY ALL THE TERMS AND CONDITIONS OF THIS AGREEMENT.
   9          *
  10          * This software contains source code for use with CMS
  11          * components. This software is licensed by CMS to be adapted only
  12          * for use in systems utilizing CMS components. CMS shall not be
  13          * responsible for misuse or illegal use of this software for devices not
  14          * supported herein. CMS is providing this software "AS IS" and will
  15          * not be responsible for issues arising from incorrect user implementation
  16          * of the software.
  17          *
  18          * This software may be replicated in part or whole for the licensed use,
  19          * with the restriction that this Disclaimer and Copyright notice must be
  20          * included with each copy of this software, whether used in part or whole,
  21          * at all times.
  22          */
  23          
  24          /****************************************************************************/
  25          /** \file adc.c
  26          **
  27          **  
  28          **
  29          **  History:
  30          **  
  31          *****************************************************************************/
  32          /****************************************************************************/
  33          /*  include files
  34          *****************************************************************************/
  35          #include "adc.h"
  36          
  37          /****************************************************************************/
  38          /*  Local pre-processor symbols/macros('#define')
  39          *****************************************************************************/
  40          
  41          /****************************************************************************/
  42          /*  Global variable definitions(declared in header file with 'extern')
  43          *****************************************************************************/
  44          
  45          /****************************************************************************/
  46          /*  Local type definitions('typedef')
  47          *****************************************************************************/
  48          
  49          /****************************************************************************/
  50          /*  Local variable  definitions('static')
  51          *****************************************************************************/
  52          
  53          /****************************************************************************/
C51 COMPILER V9.59.0.0   ADC                                                               06/27/2023 19:17:31 PAGE 2   

  54          /*  Local function prototypes('static')
  55          *****************************************************************************/
  56          
  57          /****************************************************************************/
  58          /*  Function implementation - global ('extern') and local('static')
  59          *****************************************************************************/
  60          
  61          /*****************************************************************************
  62           ** \brief   ADC_Start      
  63           ** \param [in] none       
  64           ** \return  none
  65          *****************************************************************************/
  66          void  ADC_Start(void)
  67          {
  68   1        ADCON1 |= ADC_ADCON1_ADEN_Msk;
  69   1      }
  70          /*****************************************************************************
  71           ** \brief   ADC_Stop     
  72           ** \param [in] none         
  73           ** \return  none
  74          *****************************************************************************/
  75          void  ADC_Stop(void)
  76          {
  77   1        ADCON1 &= ~(ADC_ADCON1_ADEN_Msk);
  78   1      }
  79          
  80          /*****************************************************************************
  81           ** \brief   ADC_ConfigRunMode
  82           **       配置ADC的运行模式
  83           ** \param [in] ADCClkDiv: ADC_CLK_DIV_1 ~ ADC_CLK_DIV_256
  84           **           ADCResultTpye: (1)ADC_RESULT_LEFT    左对齐
  85           **                (2)ADC_RESULT_RIGHT   右对齐
  86           ** \return  none
  87           ** \note    
  88          *****************************************************************************/
  89          void  ADC_ConfigRunMode( uint8_t ADCClkDiv, uint8_t ADCResultTpye)
  90          {
  91   1        ADCON0 &= ~(ADC_ADCON0_ADFM_Msk);
  92   1        ADCON0 |= ADCResultTpye;
  93   1        
  94   1        ADCON1 &= ~(ADC_ADCON1_ADCKS_Msk);
  95   1        ADCON1 |= (ADCClkDiv<< ADC_ADCON1_ADCKS_Pos);
  96   1      }
  97          
  98          /*****************************************************************************
  99           ** \brief   ADC_EnableHardwareTrig
 100           **     使能硬件触发ADC
 101           ** \param [in] none
 102           ** \return  none
 103           ** \note    
 104          *****************************************************************************/
 105          void  ADC_EnableHardwareTrig(void)
 106          {
 107   1        ADCON2 |= (ADC_ADCON2_ADCEX_Msk);
 108   1      }
 109          /*****************************************************************************
 110           ** \brief   ADC_DisableHardwareTrig
 111           **      关闭硬件触发ADC
 112           ** \param [in] none
 113           ** \return  none
 114           ** \note    
 115          *****************************************************************************/
C51 COMPILER V9.59.0.0   ADC                                                               06/27/2023 19:17:31 PAGE 3   

 116          void  ADC_DisableHardwareTrig(void)
 117          {
 118   1        ADCON2 &= ~(ADC_ADCON2_ADCEX_Msk);
 119   1      }
 120          /*****************************************************************************
 121           ** \brief   ADC_ConfigHardwareTrig
 122           **      配置硬件触发模式
 123           ** \param [in] ADCTGSource: ADC_TG_PWM0、ADC_TG_PWM2、ADC_TG_PWM4、ADC_TG_ADET
 124           **       TGMode：(1)ADC_TG_FALLING
 125           **           (2)ADC_TG_RISING
 126           **           (3)ADC_TG_PWM_PE
 127           ** \return  none
 128           ** \note    
 129          *****************************************************************************/
 130          void  ADC_ConfigHardwareTrig(uint8_t ADCTGSource, uint8_t TGMode)
 131          {
 132   1        ADCON2 &= ~(ADC_ADCON2_ADTGS_Msk | ADC_ADCON2_ADEGS_Msk);
 133   1        ADCON2 |= (ADCTGSource<< ADC_ADCON2_ADTGS_Pos) | (TGMode<<ADC_ADCON2_ADEGS_Pos);
 134   1      }
 135          
 136          /*****************************************************************************
 137           ** \brief   ADC_EnableChannel
 138           **      使能ADC转换通道
 139           ** \param [in]  ADCChannel: ADC_CH_0 ..... ADC_CH_63
 140           ** \return  none
 141           ** \note   
 142          *****************************************************************************/
 143          void  ADC_EnableChannel(uint8_t ADCChannel)
 144          { 
 145   1        ADCCHS = ADCChannel;
 146   1      }
 147          
 148          /*****************************************************************************
 149           ** \brief   ADC_ConfigAN63
 150           **      配置AN63通道
 151           ** \param [in] An31Channel:（1）ADC_CH_63_BGR...ADC_CH_63_VDD
 152           ** \return  none
 153           ** \note   
 154          *****************************************************************************/
 155          void  ADC_ConfigAN63(uint8_t An63Channel)
 156          {
 157   1        ADCON0 &= ~(ADC_ADCON0_ANACH_Msk);
 158   1        ADCON0 |= (An63Channel<<ADC_ADCON0_ANACH_Pos);
 159   1      
 160   1      }
 161          
 162          /*****************************************************************************
 163           ** \brief   ADC_SetTrigDelayTime
 164           **      配置硬件触发模式的延时时间
 165           ** \param [in]  TrigTime: 0~1023
 166           ** \return  none
 167           ** \note   (TrigTime + 4)) *Tsys
 168          *****************************************************************************/
 169          void  ADC_SetTrigDelayTime(uint16_t TrigTime)
 170          {
 171   1        ADDLYL =  TrigTime;
 172   1        ADCMPC &= ~(ADC_ADCMPC_ADDLY_Msk);
 173   1        ADCMPC |= ADC_ADCMPC_ADDLY_Msk & (TrigTime >> 8);
 174   1      }
 175          
 176          /*****************************************************************************
 177           ** \brief   ADC_ConfigCompareValue
C51 COMPILER V9.59.0.0   ADC                                                               06/27/2023 19:17:31 PAGE 4   

 178           **      配置ADC比较值
 179           ** \param [in]  ADCCompareValue: ADCMPH,ADCMPL
 180           ** \return  none
 181           ** \note 
 182          *****************************************************************************/
 183          void ADC_ConfigCompareValue(uint16_t ADCCompareValue)
 184          {
 185   1        ADCMPL = ADCCompareValue & 0xF;
 186   1        ADCMPH = ADCCompareValue>>4; 
 187   1      }
 188          
 189          /*****************************************************************************
 190           ** \brief   ADC_GetCmpResult
 191           **      获取ADC比较结果
 192           ** \param [in]  none
 193           ** \return   0/1
 194           ** \note 
 195          *****************************************************************************/
 196          uint8_t  ADC_GetCmpResult(void)
 197          {
 198   1        return ((ADCMPC & ADC_ADCMPC_ADCMPO_Msk) ? 1:0);
 199   1      }
 200          
 201          /*****************************************************************************
 202           ** \brief   ADC_GetADCResult
 203           **      获取ADC转换结果
 204           ** \param [in]  none
 205           ** \return  16bits ADC值
 206           ** \note 
 207          *****************************************************************************/
 208          uint16_t  ADC_GetADCResult(void)
 209          {
 210   1        if(!(ADCON0 & ADC_ADCON0_ADFM_Msk))   /*左对齐*/
 211   1        {
 212   2          return (0xfff & (((ADRESH<<4) | (ADRESL>>4))));
 213   2        }
 214   1        return (0xfff & ((ADRESH<<8)| ADRESL)); 
 215   1      }
 216          
 217          /*****************************************************************************
 218           ** \brief   ADC_EnableInt
 219           **      开启ADC转换完成中断
 220           ** \param [in]  none
 221           ** \return  none
 222           ** \note 
 223          *****************************************************************************/
 224          void ADC_EnableInt(void)
 225          {
 226   1        EIE2 |= IRQ_EIE2_ADCIE_Msk;
 227   1      }
 228          /*****************************************************************************
 229           ** \brief   ADC_DisableInt
 230           **      关闭ADC转换完成中断
 231           ** \param [in]  none
 232           ** \return  none
 233           ** \note 
 234          *****************************************************************************/
 235          void ADC_DisableInt(void)
 236          {
 237   1        EIE2 &= ~(IRQ_EIE2_ADCIE_Msk);
 238   1      }
 239          /*****************************************************************************
C51 COMPILER V9.59.0.0   ADC                                                               06/27/2023 19:17:31 PAGE 5   

 240           ** \brief   ADC_GetIntFlag
 241           **      获取ADC转换完成中断标志位
 242           ** \param [in]  none
 243           ** \return  0：无中断，1：产生中断
 244           ** \note 
 245          *****************************************************************************/
 246          uint8_t ADC_GetIntFlag(void)
 247          {
 248   1        return ((EIF2 & IRQ_EIF2_ADCIF_Msk) ? 1:0);
 249   1      }
 250          /*****************************************************************************
 251           ** \brief   ADC_ClearIntFlag
 252           **      清ADC转换完成中断标志位
 253           ** \param [in] none
 254           ** \return  none
 255           ** \note   
 256          *****************************************************************************/
 257          void ADC_ClearIntFlag(void)
 258          {
 259   1        EIF2 = 0xFF &(~(IRQ_EIF2_ADCIF_Msk));
 260   1      }
 261          
 262          /*****************************************************************************
 263           ** \brief   ADC_EnableLDO
 264           **     使能ADC的LDO
 265           ** \param [in] none
 266           ** \return  none
 267           ** \note   
 268          *****************************************************************************/
 269          void ADC_EnableLDO(void)
 270          {
 271   1        ADCLDO |= ADC_ADCLDO_LDOEN_Msk;
 272   1      }
 273          /*****************************************************************************
 274           ** \brief   ADC_DisableLDO
 275           **     关闭ADC的LDO
 276           ** \param [in] none
 277           ** \return  none
 278           ** \note   
 279          *****************************************************************************/
 280          void ADC_DisableLDO(void)
 281          {
 282   1        ADCLDO &= ~(ADC_ADCLDO_LDOEN_Msk);
 283   1      }
 284          /*****************************************************************************
 285           ** \brief   ADC_ConfigADCVref
 286           **      配置ADC的VREF
 287           ** \param [in] ADCVref :(1)ADC_VREF_1P2V : Vref =1.2v
 288           **            (2)ADC_VREF_2V   : Vref =2v
 289           **            (2)ADC_VREF_2P4V : Vref =2.4v
 290           **            (2)ADC_VREF_3V   : Vref =3v
 291           ** \return  none
 292           ** \note   
 293          *****************************************************************************/
 294          void ADC_ConfigADCVref(uint8_t ADCVref)
 295          {
 296   1        ADCLDO &= ~(ADC_ADCLDO_VSEL_Msk);
 297   1        ADCLDO |= ADCVref;
 298   1      }
 299          


C51 COMPILER V9.59.0.0   ADC                                                               06/27/2023 19:17:31 PAGE 6   

MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    189    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
