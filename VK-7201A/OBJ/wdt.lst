C51 COMPILER V9.59.0.0   WDT                                                               06/27/2023 19:17:31 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE WDT
OBJECT MODULE PLACED IN ..\OBJ\wdt.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE ..\FWLib\src\wdt.c OMF2 OPTIMIZE(8,SPEED) BROWSE INCDIR(..\CORE;..\FWLib
                    -\inc;..\SYSTEM;..\USER\app;..\TOUCHLib;..\USER\driver;..\USER\event;..\USER\mid) DEBUG PRINT(..\OBJ\wdt.lst) TABS(2) OBJ
                    -ECT(..\OBJ\wdt.obj)

line level    source

   1          /*******************************************************************************
   2          * Copyright (C) 2019 China Micro Semiconductor Limited Company. All Rights Reserved.
   3          *
   4          * This software is owned and published by:
   5          * CMS LLC, No 2609-10, Taurus Plaza, TaoyuanRoad, NanshanDistrict, Shenzhen, China.
   6          *
   7          * BY DOWNLOADING, INSTALLING OR USING THIS SOFTWARE, YOU AGREE TO BE BOUND
   8          * BY ALL THE TERMS AND CONDITIONS OF THIS AGREEMENT.
   9          *
  10          * This software contains source code for use with CMS
  11          * components. This software is licensed by CMS to be adapted only
  12          * for use in systems utilizing CMS components. CMS shall not be
  13          * responsible for misuse or illegal use of this software for devices not
  14          * supported herein. CMS is providing this software "AS IS" and will
  15          * not be responsible for issues arising from incorrect user implementation
  16          * of the software.
  17          *
  18          * This software may be replicated in part or whole for the licensed use,
  19          * with the restriction that this Disclaimer and Copyright notice must be
  20          * included with each copy of this software, whether used in part or whole,
  21          * at all times.
  22          */
  23          
  24          /****************************************************************************/
  25          /** \file wdt.c
  26          **
  27          **  
  28          **
  29          **  History:
  30          **
  31          *****************************************************************************/
  32          /****************************************************************************/
  33          /*  include files
  34          *****************************************************************************/
  35          #include "wdt.h"
  36          
  37          /****************************************************************************/
  38          /*  Local pre-processor symbols/macros('#define')
  39          ****************************************************************************/
  40          
  41          /****************************************************************************/
  42          /*  Global variable definitions(declared in header file with 'extern')
  43          ****************************************************************************/
  44          
  45          /****************************************************************************/
  46          /*  Local type definitions('typedef')
  47          ****************************************************************************/
  48          
  49          /****************************************************************************/
  50          /*  Local variable  definitions('static')
  51          ****************************************************************************/
  52          
  53          /****************************************************************************/
C51 COMPILER V9.59.0.0   WDT                                                               06/27/2023 19:17:31 PAGE 2   

  54          /*  Local function prototypes('static')
  55          ****************************************************************************/
  56          
  57          /****************************************************************************/
  58          /*  Function implementation - global ('extern') and local('static')
  59          ****************************************************************************/
  60           /*****************************************************************************
  61           ** \brief   WDT_ConfigOverflowTime
  62           **     设置WDT溢出时间
  63           ** \param [in] TsysCoefficient : (1)WDT_CLK_131072   
  64           **                 (2)WDT_CLK_262144 
  65           **                 (3)WDT_CLK_524288
  66           **                 (4)WDT_CLK_1048576 
  67           **                 (5)WDT_CLK_2097152 
  68           **                 (6)WDT_CLK_4194304 
  69           **                 (7)WDT_CLK_16777216 
  70           **                 (8)WDT_CLK_67108864 
  71           ** \return none 
  72           ** \note 若Fsys =16Mhz, 则     (1)WDT_CLK_131072  , 溢出时间= Tsys * 131072 = 8.192ms
  73           **                 (2)WDT_CLK_262144 , 溢出时间= Tsys * 262144 = 16.384ms
  74           **                 (3)WDT_CLK_524288 , 溢出时间= Tsys * 524288 = 32.768ms
  75           **                 (4)WDT_CLK_1048576 , 溢出时间= Tsys * 1048576 = 65.536ms
  76           **                 (5)WDT_CLK_2097152 , 溢出时间= Tsys * 2097152 = 131.072ms
  77           **                 (6)WDT_CLK_4194304 , 溢出时间= Tsys * 4194304 = 262.144ms
  78           **                 (7)WDT_CLK_16777216 , 溢出时间= Tsys * 16777216 = 1.048s 
  79           **                 (8)WDT_CLK_67108864 , 溢出时间= Tsys * 67108864 = 4.194s 
  80           *****************************************************************************/
  81          void  WDT_ConfigOverflowTime(uint8_t TsysCoefficient)
  82          {
  83   1        CKCON &= ~(TMR_CKCON_WTSn_Msk);
  84   1        CKCON |= (TsysCoefficient << TMR_CKCON_WTSn_Pos);
  85   1      }
  86          
  87          /*****************************************************************************
  88           ** \brief   WDT_EnableWDTReset
  89           **      使能WDT复位System
  90           ** \param [in] none
  91           **
  92           ** \return none
  93           ** \note
  94           *****************************************************************************/
  95          void WDT_EnableWDTReset(void)
  96          {
  97   1        if (EA == 1)//操作TA时序时不允许被打断，因而需要关闭中断
  98   1        {
  99   2          EA = 0;
 100   2          TA = 0xAA;
 101   2          TA = 0x55;
 102   2          WDCON |= WDT_WDCON_WDTRE_Msk;
 103   2          EA = 1;
 104   2        }
 105   1        else
 106   1        {
 107   2          TA = 0xAA;
 108   2          TA = 0x55;
 109   2          WDCON |= WDT_WDCON_WDTRE_Msk;
 110   2        }
 111   1      }
 112          
 113          /*****************************************************************************
 114           ** \brief   WDT_DisableWDTReset
 115           **      关闭WDT复位System
C51 COMPILER V9.59.0.0   WDT                                                               06/27/2023 19:17:31 PAGE 3   

 116           ** \param [in] none
 117           **
 118           ** \return none
 119           ** \note
 120           *****************************************************************************/
 121          void WDT_DisableWDTReset(void)
 122          {
 123   1        if (EA == 1)//操作TA时序时不允许被打断，因而需要关闭中断
 124   1        {
 125   2          EA = 0;
 126   2          TA = 0xAA;
 127   2          TA = 0x55;
 128   2          WDCON &= ~(WDT_WDCON_WDTRE_Msk);
 129   2          EA = 1;
 130   2        }
 131   1        else
 132   1        {
 133   2          TA = 0xAA;
 134   2          TA = 0x55;
 135   2          WDCON &= ~(WDT_WDCON_WDTRE_Msk);
 136   2        } 
 137   1      }
 138          
 139          
 140          /*****************************************************************************
 141           ** \brief   WDT_ClearWDT
 142           **     清除WDT计数器
 143           ** \param [in] none
 144           **
 145           ** \return none 
 146           ** \note
 147           *****************************************************************************/
 148          void WDT_ClearWDT(void)
 149          {
 150   1        if(EA == 1)//操作TA时序时不允许被打断，因而需要关闭中断
 151   1        {
 152   2          EA = 0;
 153   2          TA = 0xAA;
 154   2          TA = 0x55;
 155   2          WDCON |= WDT_WDCON_WDTCLR_Msk;  
 156   2          EA = 1;
 157   2        }
 158   1        else
 159   1        {
 160   2          TA = 0xAA;
 161   2          TA = 0x55;
 162   2          WDCON |= WDT_WDCON_WDTCLR_Msk;    
 163   2        }
 164   1      }
 165          /*****************************************************************************
 166           ** \brief   WDT_EnableOverflowInt
 167           **      使能WDT计数溢出中断
 168           ** \param [in] none
 169           **
 170           ** \return none 
 171           ** \note
 172           *****************************************************************************/
 173          void WDT_EnableOverflowInt(void)
 174          {
 175   1        EIE2 |= IRQ_EIE2_WDTIE_Msk;
 176   1      }
 177          /*****************************************************************************
C51 COMPILER V9.59.0.0   WDT                                                               06/27/2023 19:17:31 PAGE 4   

 178           ** \brief   WDT_EnableOverflowInt
 179           **      关闭WDT计数溢出中断
 180           ** \param [in] none
 181           **
 182           ** \return none 
 183           ** \note
 184           *****************************************************************************/
 185           void WDT_DisableOverflowInt(void)
 186           {
 187   1        EIE2 &= ~(IRQ_EIE2_WDTIE_Msk);
 188   1       }
 189          /*****************************************************************************
 190           ** \brief   WDT_GetOverflowIntFlag
 191           **      获取WDT计数溢出中断标志
 192           ** \param [in] none
 193           **
 194           ** \return 0：无中断，1：有中断
 195           ** \note
 196           *****************************************************************************/
 197          uint8_t WDT_GetOverflowIntFlag(void)
 198          {
 199   1        return ((WDCON & WDT_WDCON_WDTIF_Msk)? 1:0);
 200   1      }
 201          /*****************************************************************************
 202           ** \brief   WDT_ClearOverflowIntFlag
 203           **      清除WDT计数溢出中断标志
 204           ** \param [in] none
 205           **
 206           ** \return 0：无中断，1：有中断
 207           ** \note
 208           *****************************************************************************/
 209          void WDT_ClearOverflowIntFlag(void)
 210          {
 211   1        if(EA == 1)//操作TA时序时不允许被打断，因而需要关闭中断
 212   1        {
 213   2          EA = 0;
 214   2          TA = 0xAA;
 215   2          TA = 0x55;
 216   2          WDCON &= ~(WDT_WDCON_WDTIF_Msk);  
 217   2          EA = 1;
 218   2        }
 219   1        else
 220   1        {
 221   2          TA = 0xAA;
 222   2          TA = 0x55;
 223   2          WDCON &= ~(WDT_WDCON_WDTIF_Msk);  
 224   2        }
 225   1      
 226   1      }
 227          
 228          
 229          
 230          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    137    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
C51 COMPILER V9.59.0.0   WDT                                                               06/27/2023 19:17:31 PAGE 5   

   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
